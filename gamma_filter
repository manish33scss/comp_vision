import cv2
import numpy as np

cap=cv2.VideoCapture(0)



def adjust_gamma(image, gamma=1.0):

   invGamma = 1.0 / gamma
   table = np.array([((i / 255.0) ** invGamma) * 255
      for i in np.arange(0, 256)]).astype("uint8")

   return cv2.LUT(image, table)

while True:
    ret,frame=cap.read()
    
    # create a list of first 5 frames
    img = [cap.read()[1] for i in range(5)]
    # convert all to grayscale
    gray = [cv2.cvtColor(i, cv2.COLOR_BGR2GRAY) for i in img]
    # convert all to float64
    gray = [np.float64(i) for i in gray]
    # create a noise of variance 25
    noise = np.random.randn(*gray[1].shape)*10
    # Add this noise to images
    noisy = [i+noise for i in gray]
    # Convert back to uint8
    noisy = [np.uint8(np.clip(i,0,255)) for i in noisy]
    # Denoise 3rd frame considering all the 5 frames
    dst = cv2.fastNlMeansDenoisingMulti(noisy, 2, 5, None, 4, 7, 35)
    
    adjusted=adjust_gamma(dst,gamma=2)
    resized = cv2.resize(adjusted, (640,480), interpolation = cv2.INTER_AREA)
    cv2.imshow("frame", resized)
    
    
    
    key = cv2.waitKey(1) & 0xFF
    if key == ord("q"):
        break
    
cap.release()   
cv2.destroyAllWindows()
